{
	"version": "0.2.0",
	"configurations": [
		{
			"name": "debug:fcpay-gateway-api", // Nome descritivo para a configuração
			"type": "node", // Tipo de depurador (Node.js)
			"request": "attach", // Queremos anexar a um processo existente
			"port": 8081, // Porta do debugger EXPOSTA NO HOST (mapeada no docker-compose)
			"address": "0.0.0.0", // Onde o debugger está escutando no HOST (Docker expõe em localhost)

			"cwd": "${workspaceFolder}",
			// Mapeamento crucial para os breakpoints funcionarem corretamente:
			"localRoot": "${workspaceFolder}/apps/api", // Caminho do seu código na sua máquina local
			"remoteRoot": "/usr/src/app", // Caminho do código DENTRO do container (definido em working_dir/volumes)

			"restart": true, // Tenta reconectar automaticamente se a conexão cair
			"sourceMaps": true, // Habilita source maps (útil se você usa TypeScript ou transpilers)
			"skipFiles": [
				// Opcional: Arquivos para não entrar durante o debug
				"<node_internals>/**",
				"node_modules/**"
			]
		},
		{
			"name": "debug:fcpay-fraud-consumer", // Nome descritivo para a configuração
			"type": "node", // Tipo de depurador (Node.js)
			"request": "attach", // Queremos anexar a um processo existente
			"port": 8082, // Porta do debugger EXPOSTA NO HOST (mapeada no docker-compose)
			"address": "0.0.0.0", // Onde o debugger está escutando no HOST (Docker expõe em localhost)

			"cwd": "${workspaceFolder}",
			// Mapeamento crucial para os breakpoints funcionarem corretamente:
			"localRoot": "${workspaceFolder}/apps/workers/fraud-consumer", // Caminho do seu código na sua máquina local
			"remoteRoot": "/usr/src/app", // Caminho do código DENTRO do container (definido em working_dir/volumes)

			"restart": true, // Tenta reconectar automaticamente se a conexão cair
			"sourceMaps": true, // Habilita source maps (útil se você usa TypeScript ou transpilers)
			"skipFiles": [
				// Opcional: Arquivos para não entrar durante o debug
				"<node_internals>/**",
				"node_modules/**"
			]
		},
		{
			"name": "debug:fcpay-transaction-consumer", // Nome descritivo para a configuração
			"type": "node", // Tipo de depurador (Node.js)
			"request": "attach", // Queremos anexar a um processo existente
			"port": 8083, // Porta do debugger EXPOSTA NO HOST (mapeada no docker-compose)
			"address": "0.0.0.0", // Onde o debugger está escutando no HOST (Docker expõe em localhost)

			"cwd": "${workspaceFolder}",
			// Mapeamento crucial para os breakpoints funcionarem corretamente:
			"localRoot": "${workspaceFolder}/apps/workers/transaction-consumer", // Caminho do seu código na sua máquina local
			"remoteRoot": "/usr/src/app", // Caminho do código DENTRO do container (definido em working_dir/volumes)

			"restart": true, // Tenta reconectar automaticamente se a conexão cair
			"sourceMaps": true, // Habilita source maps (útil se você usa TypeScript ou transpilers)
			"skipFiles": [
				// Opcional: Arquivos para não entrar durante o debug
				"<node_internals>/**",
				"node_modules/**"
			]
		},
		{
			"name": "debug:fcpay-transaction-producer", // Nome descritivo para a configuração
			"type": "node", // Tipo de depurador (Node.js)
			"request": "attach", // Queremos anexar a um processo existente
			"port": 8084, // Porta do debugger EXPOSTA NO HOST (mapeada no docker-compose)
			"address": "0.0.0.0", // Onde o debugger está escutando no HOST (Docker expõe em localhost)

			"cwd": "${workspaceFolder}",
			// Mapeamento crucial para os breakpoints funcionarem corretamente:
			"localRoot": "${workspaceFolder}/apps/workers/transaction-producer", // Caminho do seu código na sua máquina local
			"remoteRoot": "/usr/src/app", // Caminho do código DENTRO do container (definido em working_dir/volumes)

			"restart": true, // Tenta reconectar automaticamente se a conexão cair
			"sourceMaps": true, // Habilita source maps (útil se você usa TypeScript ou transpilers)
			"skipFiles": [
				// Opcional: Arquivos para não entrar durante o debug
				"<node_internals>/**",
				"node_modules/**"
			]
		}
	]
}
