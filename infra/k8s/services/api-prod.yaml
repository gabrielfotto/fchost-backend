apiVersion: apps/v1
kind: Deployment
metadata:
  name: fchost-api-deployment
  # namespace: fchost
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fchost-api
  template:
    metadata:
      labels:
        app: fchost-api
    spec:
      containers:
        - name: fchost-api
          image: public.ecr.aws/e0j5c6t0/fchost/api:latest
          imagePullPolicy: Always
          resources:
            limits:
              memory: '512Mi'
              cpu: '500m'
          ports:
            - containerPort: 8080
          env:
            - name: APP_NAME
              value: 'api'
            - name: NODE_ENV
              value: 'prod'

            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: fchost-config-prod
                  key: DB_HOST

            - name: DB_PORT
              valueFrom:
                configMapKeyRef:
                  name: fchost-config-prod
                  key: DB_PORT

            - name: DB_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: fchost-config-prod
                  key: DB_USERNAME

            - name: DB_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: fchost-config-prod
                  key: DB_PASSWORD

            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: fchost-config-prod
                  key: DB_NAME

            - name: RABBITMQ_URI
              valueFrom:
                configMapKeyRef:
                  name: fchost-config-prod
                  key: RABBITMQ_URI
---
apiVersion: v1
kind: Service
metadata:
  name: fchost-api-service
  # namespace: fchost
spec:
  type: LoadBalancer
  selector:
    app: fchost-api
  ports:
    - protocol: TCP
      port: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: fchost-ingress
  # annotations:
  #   cert-manager.io/cluster-issuer: 'letsencrypt-prod'
  #   nginx.ingress.kubernetes.io/rewrite-target: /$1
  #   nginx.ingress.kubernetes.io/use-regex: 'true'
spec:
  ingressClassName: nginx
  # tls:
  #   - hosts:
  #       - portfolio.ottodev.com.br
  #     secretName: fchost-api-tls
  rules:
    - host: portfolio.ottodev.com.br
      http:
        paths:
          - path: /fchost/api
            pathType: Prefix
            backend:
              service:
                name: fchost-api-service
                port:
                  number: 8080
